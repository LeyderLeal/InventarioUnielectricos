# Generated by Django 4.2.5 on 2023-10-08 21:47

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('userEstado', models.CharField(default='Activo', max_length=45, null=True)),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Compra',
            fields=[
                ('comCodigo', models.AutoField(db_comment='Codigo de la Compra', primary_key=True, serialize=False, unique=True)),
                ('comObservaciones', models.TextField(db_comment='Observaciones que se requieran hacer', null=True)),
                ('comPrecioTotal', models.IntegerField(db_comment='suma de todos los precios acumulativos por producto')),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
            ],
        ),
        migrations.CreateModel(
            name='Marca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marcaNombre', models.CharField(db_comment='Nombre de la Unidad de Médida', max_length=45, unique=True)),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
            ],
        ),
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proTipo', models.CharField(choices=[('Persona Júridica', 'Persona Júridica'), ('Persona Natural', 'Persona Natural')], db_comment='Tipo de proveedor', max_length=20)),
                ('proIdentificacion', models.CharField(db_comment='Identificación del proveedor, puede ser cédula o Nit', max_length=15, unique=True)),
                ('proNombre', models.CharField(db_comment='Nombre del proveedor', max_length=60)),
                ('proTelefono', models.CharField(db_comment='Número telefono del proveedor', max_length=15, null=True)),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
            ],
        ),
        migrations.CreateModel(
            name='UnidadMedida',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniNombre', models.CharField(db_comment='Nombre de la Unidad de Médida', max_length=45, unique=True)),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
            ],
        ),
        migrations.CreateModel(
            name='Venta',
            fields=[
                ('venCodigo', models.AutoField(db_comment='Codigo de la Venta', primary_key=True, serialize=False, unique=True)),
                ('venObservaciones', models.TextField(db_comment='Observaciones que se requieran hacer', null=True)),
                ('venCliente', models.CharField(db_comment='Hace referencia al cliente que recibe los Productos', max_length=50, null=True)),
                ('venDireccion', models.CharField(db_comment='Hace referencia a la direccion del cliente que recibe los Productos', max_length=50, null=True)),
                ('venPrecioTotal', models.IntegerField(db_comment='suma de todos los precios acumulativos por producto')),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
                ('venVendedor', models.ForeignKey(db_comment='Hace referencia a usuario que hace la venta', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proCodigo', models.CharField(db_comment='Código único asignado al producto', max_length=50, unique=True)),
                ('proNombre', models.CharField(db_comment='Nombre del producto', max_length=30)),
                ('proDescripcion', models.CharField(db_comment='Descripcion del producto', max_length=60)),
                ('proPrecio', models.CharField(db_comment='Precio del producto', max_length=11)),
                ('proFoto', models.ImageField(blank=True, db_comment='Foto del producto', null=True, upload_to='productos/')),
                ('proVenta', models.IntegerField(db_comment='Cantidad vendidas del Producto', default=0)),
                ('proCompra', models.IntegerField(db_comment='Cantidad ingresadas del Producto', default=0)),
                ('proCantidad', models.IntegerField(db_comment='Cantidad actual del stock del Producto', default=0)),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
                ('proMarca', models.ForeignKey(db_comment='Hace referencia a la Unidad de Medida FK', default=None, on_delete=django.db.models.deletion.PROTECT, to='appInventario.marca')),
                ('proUnidadMedida', models.ForeignKey(db_comment='Hace referencia a la Unidad de Medida FK', default=None, on_delete=django.db.models.deletion.PROTECT, to='appInventario.unidadmedida')),
            ],
        ),
        migrations.CreateModel(
            name='DevolucionVenta',
            fields=[
                ('devCodigo', models.AutoField(db_comment='Codigo de la Devolucion', primary_key=True, serialize=False, unique=True)),
                ('devCliente', models.CharField(db_comment='Hace referencia al cliente que entrega la devolucion', max_length=50, null=True)),
                ('devDireccion', models.CharField(db_comment='Hace referencia a la direccion del cliente', max_length=50, null=True)),
                ('devPrecioTotal', models.IntegerField(db_comment='suma de todos los precios acumulativos por producto')),
                ('devFecha', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora de la devolucion')),
                ('devUsuarioRecibe', models.ForeignKey(db_comment='Hace referencia a usuario que recibe la devolucion', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('devVenta', models.ForeignKey(db_comment='Hace referencia a la venta al cual quiere hacer la devolucion', on_delete=django.db.models.deletion.PROTECT, to='appInventario.venta')),
            ],
        ),
        migrations.CreateModel(
            name='DevolucionCompra',
            fields=[
                ('devCodigo', models.AutoField(db_comment='Codigo de la Devolucion', primary_key=True, serialize=False, unique=True)),
                ('devProveedor', models.CharField(db_comment='Hace referencia al proveedor al que se le hace entrega la devolucion', max_length=50, null=True)),
                ('devPrecioTotal', models.IntegerField(db_comment='suma de todos los precios acumulativos por producto')),
                ('devFecha', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora de la devolucion')),
                ('devCompra', models.ForeignKey(db_comment='Hace referencia a la venta al cual quiere hacer la devolucion', on_delete=django.db.models.deletion.PROTECT, to='appInventario.compra')),
                ('devUsuarioEntrega', models.ForeignKey(db_comment='Hace referencia a usuario que entrega la devolucion', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DetalleVenta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detCantidad', models.IntegerField(db_comment='Cantidad que ingresa del Producto')),
                ('detDevueltos', models.IntegerField(db_comment='Cantidad devueltas del Producto', default=0)),
                ('detPrecioUnitario', models.IntegerField(db_comment='Precio del Producto que ingresa')),
                ('detPrecioAcumulativo', models.IntegerField(db_comment='Precio de la cantidad de productos que agrega el usuario')),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
                ('detProducto', models.ForeignKey(db_comment='Hace referencia al Producto que se está registrando en la Venta', on_delete=django.db.models.deletion.PROTECT, to='appInventario.producto')),
                ('detVenta', models.ForeignKey(db_comment='Hace referencia a la Venta registrada', on_delete=django.db.models.deletion.PROTECT, to='appInventario.venta')),
            ],
        ),
        migrations.CreateModel(
            name='DetalleDevolucionVenta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('devMetodo', models.CharField(db_comment='metodo de la devolucion', max_length=60)),
                ('devCantidad', models.IntegerField(db_comment='Cantidad que ingresa del Producto')),
                ('devPrecioUnitario', models.IntegerField(db_comment='Precio del Producto devuelto')),
                ('devPrecioAcumulativo', models.IntegerField(db_comment='Precio de la cantidad de productos que agrega el usuario')),
                ('devDevolucion', models.ForeignKey(db_comment='Hace referencia a la devolucion registrada', on_delete=django.db.models.deletion.PROTECT, to='appInventario.devolucionventa')),
                ('devProducto', models.ForeignKey(db_comment='Hace referencia al Producto que se está registrando en la Devolucion', on_delete=django.db.models.deletion.PROTECT, to='appInventario.producto')),
            ],
        ),
        migrations.CreateModel(
            name='DetalleDevolucionCompra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('devMetodo', models.CharField(db_comment='metodo de la devolucion', max_length=60)),
                ('devCantidad', models.IntegerField(db_comment='Cantidad que ingresa del Producto')),
                ('devPrecioUnitario', models.IntegerField(db_comment='Precio del Producto devuelto')),
                ('devPrecioAcumulativo', models.IntegerField(db_comment='Precio de la cantidad de productos que agrega el usuario')),
                ('devDevolucion', models.ForeignKey(db_comment='Hace referencia a la devolucion registrada', on_delete=django.db.models.deletion.PROTECT, to='appInventario.devolucioncompra')),
                ('devProducto', models.ForeignKey(db_comment='Hace referencia al Producto que se está registrando en la Devolucion', on_delete=django.db.models.deletion.PROTECT, to='appInventario.producto')),
            ],
        ),
        migrations.CreateModel(
            name='DetalleCompra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detCantidad', models.IntegerField(db_comment='Cantidad que ingresa del Producto')),
                ('detDevueltos', models.IntegerField(db_comment='Cantidad devueltas del Producto', default=0)),
                ('detPrecioUnitario', models.IntegerField(db_comment='Precio del Producto que ingresa')),
                ('detPrecioAcumulativo', models.IntegerField(db_comment='Precio de la cantidad de productos que agrega el usuario')),
                ('fechaHoraCreacion', models.DateTimeField(auto_now_add=True, db_comment='Fecha y hora del registro')),
                ('fechaHoraActualizacion', models.DateTimeField(auto_now=True, db_comment='Fecha y hora última actualización')),
                ('detCompra', models.ForeignKey(db_comment='Hace referencia a la Compra registrada', on_delete=django.db.models.deletion.PROTECT, to='appInventario.compra')),
                ('detProducto', models.ForeignKey(db_comment='Hace referencia al Producto que se está registrando en la Compra', on_delete=django.db.models.deletion.PROTECT, to='appInventario.producto')),
            ],
        ),
        migrations.AddField(
            model_name='compra',
            name='comProveedor',
            field=models.ForeignKey(db_comment='Hace referencia al proveedor que entrega los Productos', on_delete=django.db.models.deletion.PROTECT, to='appInventario.proveedor'),
        ),
        migrations.AddField(
            model_name='compra',
            name='comUsuarioRecibe',
            field=models.ForeignKey(db_comment='Hace referencia a usuario que recibe la compra', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
    ]
